<?xml version="1.0"?>
<!-- 
    注意: 除了手动编辑此文件以外，您还可以使用 
    Web 管理工具来配置应用程序的设置。可以使用 Visual Studio 中的
     “网站”->“Asp.Net 配置”选项。
    设置和注释的完整列表在 
    machine.config.comments 中，该文件通常位于 
    \Windows\Microsoft.Net\Framework\v2.x\Config 中
-->
<configuration>
  <!--日志配置部分-->
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
  </configSections>
  <!--站点日志配置部分-->
  <log4net>
    <!--写入到文件-->
    <!--<appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="log/" />
      -->
    <!--是否覆盖-->
    <!--
      <appendToFile value="false"/>
      -->
    <!--设置无限备份=-1 ，最大备份数为0-->
    <!--
      <maxSizeRollBackups value="0"/>
      -->
    <!--每个文件的最大20k-->
    <!--
      <maximumFileSize value="20"/>
      -->
    <!--名称是否可以更改 为false为可以更改-->
    <!--
      <param name="StaticLogFileName" value="false" />
      -->
    <!--文件名称-->
    <!--
      <param name="DatePattern" value="yyyyMMdd'.txt'" />
      <param name="RollingStyle" value="Composite" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%d [%r] [%t] %-5p %c  - %m%n%n" />
      </layout>
    </appender>-->
    <!--写入到文件,是累加，不生成新的文件-->
    <appender name="FileAppender" type="log4net.Appender.FileAppender">
      <file type="log4net.Util.PatternString" value="log\%date{yyyyMMdd}.txt" />
      <appendToFile value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger - %message%n%exception%newline" />
      </layout>
    </appender>

    <!-- Setup the root category, add the appenders and set the default level -->
    <root>
      <level value="ALL"/>
      <!--<appender-ref ref="RollingLogFileAppender"/>-->
      <appender-ref ref="FileAppender"></appender-ref>
    </root>
  </log4net>
  <system.web>
    <!-- 
            设置 compilation debug="true" 将调试符号插入
            已编译的页面中。但由于这会 
            影响性能，因此只在开发过程中将此值 
            设置为 true。
        -->
    <compilation debug="true"/>
    <!--
            通过 <authentication> 节可以配置 ASP.NET 使用的 
            安全身份验证模式，
            以标识传入的用户。 
        -->
    <authentication mode="Windows"/>
    <!--
            如果在执行请求的过程中出现未处理的错误，
            则通过 <customErrors> 节可以配置相应的处理步骤。具体说来，
            开发人员通过该节可以配置
            要显示的 html 错误页
            以代替错误堆栈跟踪。

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
  </system.web>
</configuration>
